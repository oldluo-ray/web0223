同源策略:
   1. 是浏览器的安全策略(防止恶意网站窃取信息)
   2. 同源策略规则: 判断ajax请求的url和发送ajax的网页的url. 他们的协议和域名以及端口号,是否完全相同,如果相同就是同源就认为是安全的.如果有一个不一样,就认为不同源,就不是安全的
   3. 同源策略主要限制了什么呢? ajax还有cookie

跨域: 给不同源的地址发送ajax请求
    解决跨域问题: 
        1. jsonp 
            原理: 就是利用script标签发送请求不受同源策略的限制,去给服务器发送请求,
            发送时要将一个定义好的函数名通过callback=函数名的形式,上传给服务器.服务器会响应函数的调用.具体要响应给浏览器的数据,就是函数调用时的实参.浏览器拿到函数调用的字符串之后,会将这个字符串,放到对应的script里面去执行,执行时会自动将引号去掉.直接变成了一段js代码. 而这段js代码就是函数调用.所以这时会去全局查找对应的函数.找到了之后就执行这个函数,响应的数据,就直接赋值给形参了. 在这个函数体中,就可以操作这个数据了

            jsonp的注意点: 
                1. jsonp只能发送get请求 
                2. jsonp没有兼容性问题
                3. 要想实现跨域,需要后台配合
               

        2. cors(跨域资源共享): 
             ie10+的浏览器才拥有的功能. 在真正发送ajax之前,浏览器会检查是否同源,如果不同源,会自动先给指定的服务器预请求一下,询问是否支持cors.如果服务器响应支持,浏览器才会让我们写的ajax请求发送出去,响应的时候就不再拦截了.如果服务器不支持cors.浏览器就不会将我们的ajax发送出去

            cors的注意点: 
                1. ie10+才支持(有兼容性问题)
                2. 可以使用get/post请求
                3. 依然需要后台配合

    
